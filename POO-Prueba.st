Morph subclass: #MapaVisual	instanceVariableNames: 'bCerrar bMinimizar'	classVariableNames: ''	poolDictionaries: ''	category: 'POO-Prueba'!!MapaVisual commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!MapaVisual methodsFor: 'Metodos' stamp: 'Fabio 8/23/2018 13:37'!cerrar"Cierra la ventana"^self delete.! !!MapaVisual methodsFor: 'Metodos' stamp: 'Fabio 8/23/2018 16:17'!agregarRegiones|origen cont reg|origen:=self position.cont:=5.[ cont>=0 ]whileTrue:[ reg:=PRegion new.reg extent: (50@50).reg color: Color random.reg position: origen.origen:=origen +(50@0).self addMorph: reg.cont:=cont-1. ].cont:=5.origen:=(50@100).[ cont>=0 ]whileTrue:[ reg:=PRegion new.reg extent: (50@50).reg color: Color random.reg position: origen.origen:=origen +(50@0).self addMorph: reg.cont:=cont-1. ].cont:=5.origen:=(50@150).[ cont>=0 ]whileTrue:[ reg:=PRegion new.reg extent: (50@50).reg color: Color random.reg position: origen.origen:=origen +(50@0).self addMorph: reg.cont:=cont-1. ].cont:=5.origen:=(50@200).[ cont>=0 ]whileTrue:[ reg:=PRegion new.reg extent: (50@50).reg color: Color random.reg position: origen.origen:=origen +(50@0).self addMorph: reg.cont:=cont-1. ].cont:=5.origen:=(50@250).[ cont>=0 ]whileTrue:[ reg:=PRegion new.reg extent: (50@50).reg color: Color random.reg position: origen.origen:=origen +(50@0).self addMorph: reg.cont:=cont-1. ].cont:=5.origen:=(50@300).[ cont>=0 ]whileTrue:[ reg:=PRegion new.reg extent: (50@50).reg color: Color random.reg position: origen.origen:=origen +(50@0).self addMorph: reg.cont:=cont-1. ].! !!MapaVisual methodsFor: 'Metodos' stamp: 'Fabio 8/23/2018 13:38'!minimizar"minimiza la ventana"^self collapse.! !!MapaVisual methodsFor: 'Inicializador' stamp: 'Fabio 8/25/2018 15:05'!inicializarMapaVisualsuper initialize.self color: Color transparent.self extent: (720@720).self position: 50@50.self agregarRegiones.bCerrar :=BotonAccion new.bMinimizar :=BotonAccion new.bCerrar color: Color red.bMinimizar color: Color blue.bCerrar position:(335@28).bMinimizar position:(325@28).bCerrar mouseAction:[self cerrar].bMinimizar  mouseAction:[self minimizar].bCerrar label: 'X'.bMinimizar label:'-'.self addMorph: bCerrar.self addMorph: bMinimizar.self openInWorld.! !BorderedMorph subclass: #PRegion	instanceVariableNames: 'bColor'	classVariableNames: ''	poolDictionaries: ''	category: 'POO-Prueba'!!PRegion commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!PRegion methodsFor: 'inicializador' stamp: 'Fabio 8/25/2018 14:51'!initializesuper initialize.! !