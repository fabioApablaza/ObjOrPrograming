Object subclass: #Civilizacion	instanceVariableNames: 'nombre colRegiones colRegPorConquistar dinero'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Civilizacion commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	colRegPorConquistar:		<Object>	colRegiones:		<Object>	dinero:		<Object>	nombre:		<Object>    Implementation Points!Object subclass: #Edificio	instanceVariableNames: 'coste tiempo cuentaTiempo vida poder contadorTurno'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Edificio commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	contadorTurno:		<Object>	coste:		<Object>	cuentaTiempo:		<Object>	poder:		<Object>	tiempo:		<Object>	vida:		<Object>    Implementation Points!Edificio subclass: #Aeropuerto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Aeropuerto commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!Aeropuerto methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:50'!verifTiempo|construccion|construccion:=false.(cuentaTiempo==tiempo)ifTrue:[construccion:=true].^construccion. ! !!Aeropuerto methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:46'!verifDinero: dineroCivilizacion^dineroCivilizacion==coste.! !Edificio subclass: #Casa	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Casa commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!Casa methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:50'!verifTiempo|construccion|construccion:=false.(cuentaTiempo==tiempo)ifTrue:[construccion:=true].^construccion. ! !!Casa methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:46'!verifDinero: dineroCivilizacion^dineroCivilizacion==coste.! !Edificio subclass: #EscuelaM	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!EscuelaM commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!EscuelaM methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:51'!verifTiempo|construccion|construccion:=false.(cuentaTiempo==tiempo)ifTrue:[construccion:=true].^construccion. ! !!EscuelaM methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:47'!verifDinero: dineroCivilizacion^dineroCivilizacion==coste.! !Edificio subclass: #Fabrica	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Fabrica commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!Fabrica methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:51'!verifTiempo|construccion|construccion:=false.(cuentaTiempo==tiempo)ifTrue:[construccion:=true].^construccion. ! !!Fabrica methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:48'!verifDinero: dineroCivilizacion^dineroCivilizacion==coste.! !Edificio subclass: #FabricaM	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!FabricaM commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!FabricaM methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:51'!verifTiempo|construccion|construccion:=false.(cuentaTiempo==tiempo)ifTrue:[construccion:=true].^construccion. ! !!FabricaM methodsFor: 'Metodos' stamp: 'Fabio 6/8/2018 14:48'!verifDinero: dineroCivilizacion^dineroCivilizacion==coste.! !Object subclass: #Juego	instanceVariableNames: 'colCivilizaciones colRegiones'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Juego commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	colCivilizaciones:		<Object>	colRegiones:		<Object>    Implementation Points!Object subclass: #Region	instanceVariableNames: 'coordenada colRegionesLimitrofes colUnidades colEdificios'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Region commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	colEdificios:		<Object>	colRegionesLimitrofes:		<Object>	colUnidades:		<Object>	coordenada:		<Object>    Implementation Points!Object subclass: #Unidad	instanceVariableNames: 'coste tiempo vida ataque defensa desplazamiento despTemp'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Unidad commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	ataque:		<Object>	coste:		<Object>	defensa:		<Object>	despTemp:		<Object>	desplazamiento:		<Object>	tiempo:		<Object>	vida:		<Object>    Implementation Points!!Unidad methodsFor: 'Inicializador' stamp: 'Fabio 6/8/2018 15:06'!inicializar: unCoste tiempo:unTiempo vida:unaVida ataque:unAtaque defensa:unaDefensa desplazamiento:unDesp desplazamientoTemp:unDespTempcoste:=unCoste.tiempo:=unTiempo.vida:=unaVida.ataque:=unAtaque.defensa:=unaDefensa.desplazamiento:=unDesp.despTemp:=unDespTemp.! !Unidad subclass: #Civil	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Civil commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Civil class	instanceVariableNames: ''!!Civil class methodsFor: 'Constructor' stamp: 'Fabio 6/8/2018 15:23'!crearCivil|unCivil|unCivil:=self new.unCivil inicializar: 0 tiempo:2  vida:1  ataque:0  defensa:1  desplazamiento:1  desplazamientoTemp:1.^unCivil.! !Unidad subclass: #Soldado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Soldado commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Soldado subclass: #SoldadoPlus	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!SoldadoPlus commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Unidad subclass: #Transporte	instanceVariableNames: 'transp'	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Transporte commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	transp:		<Object>    Implementation Points!Transporte subclass: #Bombardero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Bombardero commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Transporte subclass: #Camion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Camion commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!Transporte subclass: #Tanque	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TPO-Apablaza-Quiñonez-Osycka'!!Tanque commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!